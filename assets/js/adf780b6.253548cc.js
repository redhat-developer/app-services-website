"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8384],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return m}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},l=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),f=s(r),m=i,d=f["".concat(p,".").concat(m)]||f[m]||u[m]||o;return r?n.createElement(d,c(c({ref:t},l),{},{components:r})):n.createElement(d,c({ref:t},l))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,c=new Array(o);c[0]=f;var a={};for(var p in t)hasOwnProperty.call(t,p)&&(a[p]=t[p]);a.originalType=e,a.mdxType="string"==typeof e?e:i,c[1]=a;for(var s=2;s<o;s++)c[s]=r[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},7036:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return a},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return l},default:function(){return f}});var n=r(7462),i=r(3366),o=(r(7294),r(3905)),c=["components"],a={sidebar_position:1},p="App Services CLI",s={unversionedId:"components/cli",id:"components/cli",isDocsHomePage:!1,title:"App Services CLI",description:"The App Services CLI provides a way to interact with Application Service. The CLI provides extensibility capabilities to onboard new services",source:"@site/docs/components/cli.md",sourceDirName:"components",slug:"/components/cli",permalink:"/app-services-website/components/cli",editUrl:"https://github.com/redhat-developer/app-services-website/docs/components/cli.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Developer Platform Resources",permalink:"/app-services-website/"},next:{title:"SDKs",permalink:"/app-services-website/components/sdk"}},l=[{value:"Github repository",id:"github-repository",children:[]}],u={toc:l};function f(e){var t=e.components,r=(0,i.Z)(e,c);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"app-services-cli"},"App Services CLI"),(0,o.kt)("p",null,"The App Services CLI provides a way to interact with Application Service. The CLI provides extensibility capabilities to onboard new services"),(0,o.kt)("p",null,"CLI features for all services:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Authentication and authorization for cloud.redhat.com services"),(0,o.kt)("li",{parentName:"ul"},"The ability to set the service context so that the user can specify a \u201ccurrent\u201d instance to work against"),(0,o.kt)("li",{parentName:"ul"},"The ability to connect services together to build more complex (for example to use setup a Kafka consumer to use Service Registry)"),(0,o.kt)("li",{parentName:"ul"},"Ability to connect and bind all services to end user applications (using App Services operator) ")),(0,o.kt)("h2",{id:"github-repository"},"Github repository"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/redhat-developer/app-services-cli"},"https://github.com/redhat-developer/app-services-cli")))}f.isMDXComponent=!0}}]);