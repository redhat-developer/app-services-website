"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3724],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(r),d=a,m=u["".concat(l,".").concat(d)]||u[d]||f[d]||i;return r?n.createElement(m,o(o({ref:t},p),{},{components:r})):n.createElement(m,o({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},5899:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return u}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),o=["components"],s={},l=void 0,c={unversionedId:"cliref/rhoas_kafka_list",id:"cliref/rhoas_kafka_list",isDocsHomePage:!1,title:"rhoas_kafka_list",description:"rhoas kafka list",source:"@site/docs/cliref/rhoas_kafka_list.md",sourceDirName:"cliref",slug:"/cliref/rhoas_kafka_list",permalink:"/app-services-website/cliref/rhoas_kafka_list",editUrl:"https://github.com/redhat-developer/app-services-website/docs/cliref/rhoas_kafka_list.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"rhoas_kafka_describe",permalink:"/app-services-website/cliref/rhoas_kafka_describe"},next:{title:"rhoas_kafka_topic",permalink:"/app-services-website/cliref/rhoas_kafka_topic"}},p=[{value:"rhoas kafka list",id:"rhoas-kafka-list",children:[{value:"Synopsis",id:"synopsis",children:[]},{value:"Examples",id:"examples",children:[]},{value:"Options",id:"options",children:[]},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",children:[]},{value:"SEE ALSO",id:"see-also",children:[]}]}],f={toc:p};function u(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"rhoas-kafka-list"},"rhoas kafka list"),(0,i.kt)("p",null,"List all Apache Kafka instances"),(0,i.kt)("h3",{id:"synopsis"},"Synopsis"),(0,i.kt)("p",null,"List all Apache Kafka instances."),(0,i.kt)("p",null,"This command will provide a high level view of all Kafka instances.\nThe fields displayed are: ID, Name, Owner, Status, Cloud Provider, Region.\nUse the describe command to view all fields for a specific instance."),(0,i.kt)("p",null,"The instances are displayed by default in a table, but can also be displayed as JSON or YAML."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"rhoas kafka list [flags]\n")),(0,i.kt)("h3",{id:"examples"},"Examples"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"# list all Kafka instances using the default output format\n$ rhoas kafka list\n\n# list all Kafka instances using JSON as the output format\n$ rhoas kafka list -o json\n\n")),(0,i.kt)("h3",{id:"options"},"Options"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'      --limit int       The maximum number of Kafka instances to be returned (default 100)\n  -o, --output string   Format in which to display the Kafka instances (choose from: "json", "yml", "yaml")\n      --page int        Display the Kafka instances from the specified page number (default 1)\n      --search string   Text search to filter the Kafka instances by name, owner, cloud_provider, region and status\n')),(0,i.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"  -h, --help      Show help for a command\n  -v, --verbose   Enable verbose mode\n")),(0,i.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/app-services-website/cliref/rhoas_kafka"},"rhoas kafka"),"\t - Create, view, use, and manage your Kafka instances")))}u.isMDXComponent=!0}}]);