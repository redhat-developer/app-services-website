"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3888],{3905:function(e,r,t){t.d(r,{Zo:function(){return c},kt:function(){return m}});var o=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function s(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?s(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,o,n=function(e,r){if(null==e)return{};var t,o,n={},s=Object.keys(e);for(o=0;o<s.length;o++)t=s[o],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)t=s[o],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var f=o.createContext({}),u=function(e){var r=o.useContext(f),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},c=function(e){var r=u(e.components);return o.createElement(f.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return o.createElement(o.Fragment,{},r)}},l=o.forwardRef((function(e,r){var t=e.components,n=e.mdxType,s=e.originalType,f=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),l=u(t),m=n,d=l["".concat(f,".").concat(m)]||l[m]||p[m]||s;return t?o.createElement(d,a(a({ref:r},c),{},{components:t})):o.createElement(d,a({ref:r},c))}));function m(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var s=t.length,a=new Array(s);a[0]=l;var i={};for(var f in r)hasOwnProperty.call(r,f)&&(i[f]=r[f]);i.originalType=e,i.mdxType="string"==typeof e?e:n,a[1]=i;for(var u=2;u<s;u++)a[u]=t[u];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}l.displayName="MDXCreateElement"},8550:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return i},contentTitle:function(){return f},metadata:function(){return u},toc:function(){return c},default:function(){return l}});var o=t(7462),n=t(3366),s=(t(7294),t(3905)),a=["components"],i={},f=void 0,u={unversionedId:"cliref/rhoas_kafka_consumer-group_reset-offset",id:"cliref/rhoas_kafka_consumer-group_reset-offset",isDocsHomePage:!1,title:"rhoas_kafka_consumer-group_reset-offset",description:"rhoas kafka consumer-group reset-offset",source:"@site/docs/cliref/rhoas_kafka_consumer-group_reset-offset.md",sourceDirName:"cliref",slug:"/cliref/rhoas_kafka_consumer-group_reset-offset",permalink:"/app-services-website/cliref/rhoas_kafka_consumer-group_reset-offset",editUrl:"https://github.com/redhat-developer/app-services-website/docs/cliref/rhoas_kafka_consumer-group_reset-offset.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"rhoas_kafka_consumer-group_list",permalink:"/app-services-website/cliref/rhoas_kafka_consumer-group_list"},next:{title:"rhoas_kafka_create",permalink:"/app-services-website/cliref/rhoas_kafka_create"}},c=[{value:"rhoas kafka consumer-group reset-offset",id:"rhoas-kafka-consumer-group-reset-offset",children:[{value:"Synopsis",id:"synopsis",children:[]},{value:"Examples",id:"examples",children:[]},{value:"Options",id:"options",children:[]},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",children:[]},{value:"SEE ALSO",id:"see-also",children:[]}]}],p={toc:c};function l(e){var r=e.components,t=(0,n.Z)(e,a);return(0,s.kt)("wrapper",(0,o.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"rhoas-kafka-consumer-group-reset-offset"},"rhoas kafka consumer-group reset-offset"),(0,s.kt)("p",null,"Reset offset for a consumer group"),(0,s.kt)("h3",{id:"synopsis"},"Synopsis"),(0,s.kt)("p",null,"Reset the offset for consumers in a consumer group reading from a given topic."),(0,s.kt)("p",null,"Offset types: earliest, latest, absolute, timestamp\nYou can choose specific partition to reset offset from (advanced usage)"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"rhoas kafka consumer-group reset-offset [flags]\n")),(0,s.kt)("h3",{id:"examples"},"Examples"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'# reset offset for a consumer group to latest\n$ rhoas kafka consumer-group reset-offset --id consumer_group_1 --offset latest\n\n# reset offset for a consumer group to earliest\n$ rhoas kafka consumer-group reset-offset --id consumer_group_1 --offset earliest\n\n# reset offset for a consumer group to an absolute value\n$ rhoas kafka consumer-group reset-offset --id consumer_group_1 --offset absolute --value 0\n\n# reset offset for a consumer group to a timestamp\n$ rhoas kafka consumer-group reset-offset --id consumer_group_1 --offset timestamp --value "2016-06-23T09:07:21-07:00"\n\n# reset offset for specific partitions in a consumer group\n$ rhoas kafka consumer-group reset-offset --id consumer_group_1 --offset latest --topic my-topic --partitions 0,1\n\n')),(0,s.kt)("h3",{id:"options"},"Options"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'      --id string               The unique ID of the consumer group to reset-offset\n      --offset string           Offset type (choose from: "earliest", "latest", "absolute", "timestamp")\n      --partitions int32Slice   Partitions on which to reset the consumer group offset (comma-separated integers) (default [])\n      --topic string            Select topic for which consumer group offsets are to be reset\n      --value string            Custom offset value (required when offset is "absolute" or "timestamp")\n  -y, --yes                     Skip confirmation to forcibly reset the offset for the consumer group\n')),(0,s.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"  -h, --help      Show help for a command\n  -v, --verbose   Enable verbose mode\n")),(0,s.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/app-services-website/cliref/rhoas_kafka_consumer-group"},"rhoas kafka consumer-group"),"\t - Describe, list, and delete consumer groups for the current Apache Kafka instance")))}l.isMDXComponent=!0}}]);