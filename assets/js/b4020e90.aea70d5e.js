"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5178],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var i=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,i,a=function(e,t){if(null==e)return{};var r,i,a={},n=Object.keys(e);for(i=0;i<n.length;i++)r=n[i],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(i=0;i<n.length;i++)r=n[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=i.createContext({}),l=function(e){var t=i.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=l(e.components);return i.createElement(c.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=l(r),m=a,d=u["".concat(c,".").concat(m)]||u[m]||f[m]||n;return r?i.createElement(d,s(s({ref:t},p),{},{components:r})):i.createElement(d,s({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,s=new Array(n);s[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var l=2;l<n;l++)s[l]=r[l];return i.createElement.apply(null,s)}return i.createElement.apply(null,r)}u.displayName="MDXCreateElement"},8496:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return p},default:function(){return u}});var i=r(7462),a=r(3366),n=(r(7294),r(3905)),s=["components"],o={},c=void 0,l={unversionedId:"cliref/rhoas_service-registry_artifact_list",id:"cliref/rhoas_service-registry_artifact_list",isDocsHomePage:!1,title:"rhoas_service-registry_artifact_list",description:"rhoas service-registry artifact list",source:"@site/docs/cliref/rhoas_service-registry_artifact_list.md",sourceDirName:"cliref",slug:"/cliref/rhoas_service-registry_artifact_list",permalink:"/app-services-website/cliref/rhoas_service-registry_artifact_list",editUrl:"https://github.com/redhat-developer/app-services-website/docs/cliref/rhoas_service-registry_artifact_list.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"rhoas_service-registry_artifact_import",permalink:"/app-services-website/cliref/rhoas_service-registry_artifact_import"},next:{title:"rhoas_service-registry_artifact_metadata-get",permalink:"/app-services-website/cliref/rhoas_service-registry_artifact_metadata-get"}},p=[{value:"rhoas service-registry artifact list",id:"rhoas-service-registry-artifact-list",children:[{value:"Synopsis",id:"synopsis",children:[]},{value:"Examples",id:"examples",children:[]},{value:"Options",id:"options",children:[]},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",children:[]},{value:"SEE ALSO",id:"see-also",children:[]}]}],f={toc:p};function u(e){var t=e.components,r=(0,a.Z)(e,s);return(0,n.kt)("wrapper",(0,i.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"rhoas-service-registry-artifact-list"},"rhoas service-registry artifact list"),(0,n.kt)("p",null,"[beta]"," List artifacts"),(0,n.kt)("h3",{id:"synopsis"},"Synopsis"),(0,n.kt)("p",null,"List all artifacts for the group by specified output format (by default, table)\nThis command is available as part of the Development Preview release."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"rhoas service-registry artifact list [flags]\n")),(0,n.kt)("h3",{id:"examples"},"Examples"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'## List all artifacts for the "default" artifact group\nrhoas service-registry artifact list\n\n## List all artifacts with "my-group" group\nrhoas service-registry artifact list --group=my-group\n\n## List all artifacts with limit and group\nrhoas service-registry artifact list --page=2 --limit=10\n\n')),(0,n.kt)("h3",{id:"options"},"Options"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'  -g, --group string         Artifact group (default "default")\n      --instance-id string   ID of the Service Registry instance to be used. By default, uses the currently selected instance\n      --limit int32          Page limit (default 100)\n  -o, --output string        Output format (json, yaml, yml)\n      --page int32           Page number (default 1)\n')),(0,n.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"  -h, --help      Show help for a command\n  -v, --verbose   Enable verbose mode\n")),(0,n.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/app-services-website/cliref/rhoas_service-registry_artifact"},"rhoas service-registry artifact"),"\t - ","[beta]"," Manage Service Registry artifacts")))}u.isMDXComponent=!0}}]);