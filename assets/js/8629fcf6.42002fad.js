"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1434],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,c=e.originalType,s=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=l(r),f=o,h=d["".concat(s,".").concat(f)]||d[f]||p[f]||c;return r?n.createElement(h,i(i({ref:t},u),{},{components:r})):n.createElement(h,i({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=r.length,i=new Array(c);i[0]=d;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var l=2;l<c;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7277:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return a},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var n=r(7462),o=r(3366),c=(r(7294),r(3905)),i=["components"],a={},s=void 0,l={unversionedId:"cliref/rhoas_cluster_connect",id:"cliref/rhoas_cluster_connect",isDocsHomePage:!1,title:"rhoas_cluster_connect",description:"rhoas cluster connect",source:"@site/docs/cliref/rhoas_cluster_connect.md",sourceDirName:"cliref",slug:"/cliref/rhoas_cluster_connect",permalink:"/app-services-website/cliref/rhoas_cluster_connect",editUrl:"https://github.com/redhat-developer/app-services-website/docs/cliref/rhoas_cluster_connect.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"rhoas_cluster_bind",permalink:"/app-services-website/cliref/rhoas_cluster_bind"},next:{title:"rhoas_cluster_status",permalink:"/app-services-website/cliref/rhoas_cluster_status"}},u=[{value:"rhoas cluster connect",id:"rhoas-cluster-connect",children:[{value:"Synopsis",id:"synopsis",children:[]},{value:"Examples",id:"examples",children:[]},{value:"Options",id:"options",children:[]},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",children:[]},{value:"SEE ALSO",id:"see-also",children:[]}]}],p={toc:u};function d(e){var t=e.components,r=(0,o.Z)(e,i);return(0,c.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h2",{id:"rhoas-cluster-connect"},"rhoas cluster connect"),(0,c.kt)("p",null,"Connect your services to Kubernetes or OpenShift"),(0,c.kt)("h3",{id:"synopsis"},"Synopsis"),(0,c.kt)("p",null,"Connect your application services to your Kubernetes or OpenShift cluster.\nThe kubeconfig file is used to connect to the cluster and identify the context.\nAlternatively, you can use the KUBECONFIG environment variable to read your configuration."),(0,c.kt)("p",null,"NOTE: This command requires the RHOAS operator to be running on your cluster."),(0,c.kt)("p",null,"This command will:"),(0,c.kt)("ol",null,(0,c.kt)("li",{parentName:"ol"},(0,c.kt)("p",{parentName:"li"},"Create a service account and mount it as a secret into your cluster.\nIf the cluster has a service account, it will be refreshed.")),(0,c.kt)("li",{parentName:"ol"},(0,c.kt)("p",{parentName:"li"},"Create a Kafka Request object that can be used to create a ServiceBinding object using\nthe Service Binding operator (",(0,c.kt)("a",{parentName:"p",href:"https://github.com/redhat-developer/service-binding-operator"},"https://github.com/redhat-developer/service-binding-operator"),")."))),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"rhoas cluster connect [flags]\n")),(0,c.kt)("h3",{id:"examples"},"Examples"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"# connect the current Kafka instance to your cluster\n$ rhoas cluster connect\n\n")),(0,c.kt)("h3",{id:"options"},"Options"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"      --ignore-context      Ignore currently selected services and ask to select each service separately\n      --kubeconfig string   Location of the kubeconfig file\n  -n, --namespace string    Custom Kubernetes namespace (if not set current namespace will be used)\n      --token string        Provide an offline token to be used by the operator (to get a token, visit https://console.redhat.com/openshift/token)\n                            \n  -y, --yes                 Forcibly create a binding without confirmation\n")),(0,c.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"  -h, --help      Show help for a command\n  -v, --verbose   Enable verbose mode\n")),(0,c.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("a",{parentName:"li",href:"/app-services-website/cliref/rhoas_cluster"},"rhoas cluster"),"\t - View and perform operations on your Kubernetes or OpenShift cluster")))}d.isMDXComponent=!0}}]);